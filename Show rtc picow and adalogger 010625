# Show rtc picow and adalogger 010625
# Joe Pardue 1/6/24
import time
import board
import rtc
from adafruit_ds3231 import DS3231
from adafruit_ssd1306 import SSD1306_I2C

# Initialize I2C, RTCs, and OLED display
i2c = board.STEMMA_I2C()
adalogger_rtc = DS3231(i2c)  # DS3231 RTC on Adalogger
pico_rtc = rtc.RTC()  # Internal RTC on Pico W
display = SSD1306_I2C(128, 64, i2c, addr=0x3D)  # OLED display

# Clear the display initially
display.fill(0)
display.show()

# Format the time for display
def format_time(time_struct):
    return "{:04}-{:02}-{:02} {:02}:{:02}:{:02}".format(
        time_struct.tm_year,
        time_struct.tm_mon,
        time_struct.tm_mday,
        time_struct.tm_hour,
        time_struct.tm_min,
        time_struct.tm_sec,
    )

# Read time from Adalogger RTC and set Pico W RTC
adalogger_time = adalogger_rtc.datetime
pico_rtc.datetime = adalogger_time
print("Adalogger Time:", format_time(adalogger_time))
print("Pico RTC Time: ", format_time(pico_rtc.datetime))

# Display the times on OLED
display.fill(0)
display.text("Adalogger:", 0, 0, 1)
display.text(format_time(adalogger_time), 0, 16, 1)
display.text("Pico RTC:", 0, 32, 1)
display.text(format_time(pico_rtc.datetime), 0, 48, 1)
display.show()

# Loop to show times continuously
while True:
    adalogger_time = adalogger_rtc.datetime
    pico_time = pico_rtc.datetime
    print("Adalogger Time:", format_time(adalogger_time))
    print("Pico RTC Time: ", format_time(pico_time))
    display.fill(0)
    display.text("Adalogger:", 0, 0, 1)
    display.text(format_time(adalogger_time), 0, 16, 1)
    display.text("Pico RTC:", 0, 32, 1)
    display.text(format_time(pico_time), 0, 48, 1)
    display.show()
    time.sleep(1)
